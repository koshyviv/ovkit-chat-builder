# Use an official Node.js LTS image.
FROM node:18-alpine AS development

# Set the working directory in the container
WORKDIR /app

# Copy package.json and package-lock.json (or yarn.lock/pnpm-lock.yaml)
COPY package*.json ./
# If using yarn, copy yarn.lock
# COPY yarn.lock ./
# If using pnpm, copy pnpm-lock.yaml
# COPY pnpm-lock.yaml ./

# Install dependencies
# Using npm ci for potentially faster and more reliable installs
RUN npm ci

# Copy the rest of the application code
COPY . .

# Expose the ports the frontend and backend will run on
# Frontend port (Vite default, adjust if different)
EXPOSE 8080
# Backend port (defined in server.js)
EXPOSE 3001

# Default command (can be overridden in docker-compose.yml)
# We don't need a default command here as docker-compose will specify them.
CMD [ "sh", "-c", "echo 'Please specify a command in docker-compose.yml'" ] 